name: "CaffeNet"
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/imagenet/data/imagenet_mean.binaryproto"
  }
  data_param {
    source: "data/imagenet/data/imagenet_seed1_uniform5_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data1"
  type: "Data"
  top: "data1"
  top: "label1"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "data/imagenet/data/imagenet_mean.binaryproto"
  }
  data_param {
    source: "data/imagenet/data/imagenet_test_lmdb"
    batch_size: 4
    backend: LMDB
  }
}
layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_file: "data/flowers/data/flowers_mean.binaryproto"
  }
  data_param {
    source: "data/flowers/data/flowers_train_lmdb"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data2"
  type: "Data"
  top: "data2"
  top: "label2"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_file: "data/flowers/data/flowers_mean.binaryproto"
  }
  data_param {
    source: "data/flowers/data/flowers_test_lmdb"
    batch_size: 4
    backend: LMDB
  }
}

layer {
  name: "data_concat"
  type: "Concat"
  bottom: "data1"
  bottom: "data2"
  top: "data"
  concat_param {
    axis: 0
  }
}

layer {
  name: "conv1_task1"
  type: "Convolution"
  bottom: "data1"
  top: "conv1_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_task1"
  type: "ReLU"
  bottom: "conv1_task1"
  top: "conv1_task1"
}
layer {
  name: "pool1_task1"
  type: "Pooling"
  bottom: "conv1_task1"
  top: "pool1_task1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_task1"
  type: "LRN"
  bottom: "pool1_task1"
  top: "norm1_task1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_task1"
  type: "Convolution"
  bottom: "norm1_task1"
  top: "conv2_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_task1"
  type: "ReLU"
  bottom: "conv2_task1"
  top: "conv2_task1"
}
layer {
  name: "pool2_task1"
  type: "Pooling"
  bottom: "conv2_task1"
  top: "pool2_task1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_task1"
  type: "LRN"
  bottom: "pool2_task1"
  top: "norm2_task1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_task1"
  type: "Convolution"
  bottom: "norm2_task1"
  top: "conv3_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_task1"
  type: "ReLU"
  bottom: "conv3_task1"
  top: "conv3_task1"
}
layer {
  name: "conv4_task1"
  type: "Convolution"
  bottom: "conv3_task1"
  top: "conv4_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_task1"
  type: "ReLU"
  bottom: "conv4_task1"
  top: "conv4_task1"
}
layer {
  name: "conv5_task1"
  type: "Convolution"
  bottom: "conv4_task1"
  top: "conv5_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_task1"
  type: "ReLU"
  bottom: "conv5_task1"
  top: "conv5_task1"
}
layer {
  name: "pool5_task1"
  type: "Pooling"
  bottom: "conv5_task1"
  top: "pool5_task1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_task1"
  type: "InnerProduct"
  bottom: "pool5_task1"
  top: "fc6_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_task1"
  type: "ReLU"
  bottom: "fc6_task1"
  top: "fc6_task1"
}
layer {
  name: "drop6_task1"
  type: "Dropout"
  bottom: "fc6_task1"
  top: "fc6_task1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_task1"
  type: "InnerProduct"
  bottom: "fc6_task1"
  top: "fc7_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_task1"
  type: "ReLU"
  bottom: "fc7_task1"
  top: "fc7_task1"
}
layer {
  name: "drop7_task1"
  type: "Dropout"
  bottom: "fc7_task1"
  top: "fc7_task1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_task1"
  type: "InnerProduct"
  bottom: "fc7_task1"
  top: "fc8_task1"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv1_task2ft"
  type: "Convolution"
  bottom: "data2"
  top: "conv1_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_task2ft"
  type: "ReLU"
  bottom: "conv1_task2ft"
  top: "conv1_task2ft"
}
layer {
  name: "pool1_task2ft"
  type: "Pooling"
  bottom: "conv1_task2ft"
  top: "pool1_task2ft"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_task2ft"
  type: "LRN"
  bottom: "pool1_task2ft"
  top: "norm1_task2ft"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_task2ft"
  type: "Convolution"
  bottom: "norm1_task2ft"
  top: "conv2_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_task2ft"
  type: "ReLU"
  bottom: "conv2_task2ft"
  top: "conv2_task2ft"
}
layer {
  name: "pool2_task2ft"
  type: "Pooling"
  bottom: "conv2_task2ft"
  top: "pool2_task2ft"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_task2ft"
  type: "LRN"
  bottom: "pool2_task2ft"
  top: "norm2_task2ft"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_task2ft"
  type: "Convolution"
  bottom: "norm2_task2ft"
  top: "conv3_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_task2ft"
  type: "ReLU"
  bottom: "conv3_task2ft"
  top: "conv3_task2ft"
}
layer {
  name: "conv4_task2ft"
  type: "Convolution"
  bottom: "conv3_task2ft"
  top: "conv4_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_task2ft"
  type: "ReLU"
  bottom: "conv4_task2ft"
  top: "conv4_task2ft"
}
layer {
  name: "conv5_task2ft"
  type: "Convolution"
  bottom: "conv4_task2ft"
  top: "conv5_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_task2ft"
  type: "ReLU"
  bottom: "conv5_task2ft"
  top: "conv5_task2ft"
}
layer {
  name: "pool5_task2ft"
  type: "Pooling"
  bottom: "conv5_task2ft"
  top: "pool5_task2ft"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_task2ft"
  type: "InnerProduct"
  bottom: "pool5_task2ft"
  top: "fc6_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_task2ft"
  type: "ReLU"
  bottom: "fc6_task2ft"
  top: "fc6_task2ft"
}
layer {
  name: "drop6_task2ft"
  type: "Dropout"
  bottom: "fc6_task2ft"
  top: "fc6_task2ft"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_task2ft"
  type: "InnerProduct"
  bottom: "fc6_task2ft"
  top: "fc7_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_task2ft"
  type: "ReLU"
  bottom: "fc7_task2ft"
  top: "fc7_task2ft"
}
layer {
  name: "drop7_task2ft"
  type: "Dropout"
  bottom: "fc7_task2ft"
  top: "fc7_task2ft"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8-flowers_task2ft"
  type: "InnerProduct"
  bottom: "fc7_task2ft"
  top: "fc8-flowers_task2ft"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 102
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "conv1_task2"
  type: "Convolution"
  bottom: "data"
  top: "conv1_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_task2"
  type: "ReLU"
  bottom: "conv1_task2"
  top: "conv1_task2"
}
layer {
  name: "pool1_task2"
  type: "Pooling"
  bottom: "conv1_task2"
  top: "pool1_task2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_task2"
  type: "LRN"
  bottom: "pool1_task2"
  top: "norm1_task2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_task2"
  type: "Convolution"
  bottom: "norm1_task2"
  top: "conv2_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_task2"
  type: "ReLU"
  bottom: "conv2_task2"
  top: "conv2_task2"
}
layer {
  name: "pool2_task2"
  type: "Pooling"
  bottom: "conv2_task2"
  top: "pool2_task2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_task2"
  type: "LRN"
  bottom: "pool2_task2"
  top: "norm2_task2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_task2"
  type: "Convolution"
  bottom: "norm2_task2"
  top: "conv3_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_task2"
  type: "ReLU"
  bottom: "conv3_task2"
  top: "conv3_task2"
}
layer {
  name: "conv4_task2"
  type: "Convolution"
  bottom: "conv3_task2"
  top: "conv4_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_task2"
  type: "ReLU"
  bottom: "conv4_task2"
  top: "conv4_task2"
}
layer {
  name: "conv5_task2"
  type: "Convolution"
  bottom: "conv4_task2"
  top: "conv5_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_task2"
  type: "ReLU"
  bottom: "conv5_task2"
  top: "conv5_task2"
}
layer {
  name: "pool5_task2"
  type: "Pooling"
  bottom: "conv5_task2"
  top: "pool5_task2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_task2"
  type: "InnerProduct"
  bottom: "pool5_task2"
  top: "fc6_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_task2"
  type: "ReLU"
  bottom: "fc6_task2"
  top: "fc6_task2"
}
layer {
  name: "drop6_task2"
  type: "Dropout"
  bottom: "fc6_task2"
  top: "fc6_task2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_task2"
  type: "InnerProduct"
  bottom: "fc6_task2"
  top: "fc7_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7_task2"
  type: "ReLU"
  bottom: "fc7_task2"
  top: "fc7_task2"
}
layer {
  name: "drop7_task2"
  type: "Dropout"
  bottom: "fc7_task2"
  top: "fc7_task2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7_task2_slice"
  type: "Slice"
  bottom: "fc7_task2"
  top: "fc7_task2_slice1"
  top: "fc7_task2_slice2"
  slice_param {
    axis: 0
  }
}
layer {
  name: "fc8_task2"
  type: "InnerProduct"
  bottom: "fc7_task2_slice1"
  top: "fc8_task2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "accuracy_task1"
  type: "Accuracy"
  bottom: "fc8_task2"
  bottom: "label1"
  top: "accuracy_task1"
  include {
    phase: TEST
  }
}
layer {
    name: "KD_loss11"
    type: "KnowledgeDistillation"
    bottom: "fc8_task2" #student
    bottom: "fc8_task1" #teacher
    propagate_down: true
    propagate_down: false
    top: "KD_loss11"
    knowledge_distillation_param { 
        temperature: 2 #usually larger than 1
    } 
    loss_weight: 0.25
}

layer {
  name: "fc8-flowers_task2"
  type: "InnerProduct"
  bottom: "fc7_task2_slice2"
  top: "fc8-flowers_task2"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 102
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
    name: "KD_loss22"
    type: "KnowledgeDistillation"
    bottom: "fc8-flowers_task2" #student
    bottom: "fc8-flowers_task2ft" #teacher
    propagate_down: true
    propagate_down: false
    top: "KD_loss22"
    knowledge_distillation_param { 
        temperature: 2 #usually larger than 1
    }
    loss_weight: 0.25
}
layer {
  name: "accuracy_task2"
  type: "Accuracy"
  bottom: "fc8-flowers_task2"
  bottom: "label2"
  top: "accuracy_task2"
  include {
    phase: TEST
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "label1"
  bottom: "label2"
}
